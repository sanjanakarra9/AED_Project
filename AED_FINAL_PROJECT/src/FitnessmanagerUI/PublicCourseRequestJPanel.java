/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FitnessmanagerUI;

import Course.Course;
import Enterprise.FitnessEnterprise;
import UserAccount.UserAcnt;
import WorkQueue.CourseQueue;
import WorkQueue.CourseRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sonur
 */
public class PublicCourseRequestJPanel extends javax.swing.JPanel {

    private JPanel container;
    private UserAcnt account;
    private FitnessEnterprise fitenterprise;

    /**
     * Creates new form PublicCourseRequestJPanel
     */
    public PublicCourseRequestJPanel(JPanel container, UserAcnt account, FitnessEnterprise fitenterprise) {
        initComponents();
        this.container = container;
        this.account = account;
        this.fitenterprise = fitenterprise;
        populateRequest();
    }

    private void populateRequest() {
        CourseQueue courseQueue = fitenterprise.getQueueofCourses();
        DefaultTableModel model = (DefaultTableModel) requestJTable.getModel();

        model.setRowCount(0);
        for (CourseRequest courseRequest : courseQueue.getCourseRequestList()) {
            Object[] row = new Object[4];
            row[0] = courseRequest.getSend();
            row[1] = courseRequest;
            row[2] = courseRequest.getReceive();
            row[3] = courseRequest.getStatus();
            model.addRow(row);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        acceptBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestJTable = new javax.swing.JTable();
        backTxt = new javax.swing.JButton();

        setBackground(new java.awt.Color(43, 45, 66));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Please check the request message:");

        acceptBtn.setBackground(new java.awt.Color(202, 97, 71));
        acceptBtn.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        acceptBtn.setText("Accept");
        acceptBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptBtnActionPerformed(evt);
            }
        });

        cancelBtn.setBackground(new java.awt.Color(202, 97, 71));
        cancelBtn.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        requestJTable.setBackground(new java.awt.Color(242, 233, 228));
        requestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Requested Customer", "Course", "In Charge", "Requested Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        requestJTable.setRowHeight(40);
        requestJTable.setRowMargin(4);
        requestJTable.setSelectionBackground(new java.awt.Color(215, 145, 54));
        jScrollPane1.setViewportView(requestJTable);

        backTxt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-return-24.png"))); // NOI18N
        backTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backTxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(backTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(201, 201, 201)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(309, 309, 309)
                        .addComponent(acceptBtn)
                        .addGap(32, 32, 32)
                        .addComponent(cancelBtn))
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(571, 571, 571))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(backTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acceptBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(411, 411, 411))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void acceptBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestJTable.getSelectedRow();
        if (selectedRow >= 0) {
            CourseRequest courseRequest = (CourseRequest) requestJTable.getValueAt(selectedRow, 1);
            if (!courseRequest.getStatus().equals("Pending")) {
                JOptionPane.showMessageDialog(null, "You cannot change it.");
            } else {
                courseRequest.setStatus("Accept");
                JOptionPane.showMessageDialog(null, "Accept Successfully");
                courseRequest.setReceive(account);
                Course course1 = courseRequest.getCourse(); 
                    for (Course course2 : fitenterprise.getCourseDirectory().getListOfCourses()) {
                        if (course1 == course2) {
                            int remainSeats = course2.getVacantSeats();
                            course2.setVacantSeats(remainSeats - 1);
                        }
                    }
                
                populateRequest();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
    }//GEN-LAST:event_acceptBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestJTable.getSelectedRow();
        if (selectedRow >= 0) {
            CourseRequest courseRequest = (CourseRequest) requestJTable.getValueAt(selectedRow, 1);
            if (!courseRequest.getStatus().equals("Pending")) {
                JOptionPane.showMessageDialog(null, "You cannot change it.");
            } else {
                courseRequest.setStatus("Cancel");
                JOptionPane.showMessageDialog(null, "Cancel Successfully");
                courseRequest.setReceive(account);
                populateRequest();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void backTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backTxtActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backTxtActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptBtn;
    private javax.swing.JButton backTxt;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable requestJTable;
    // End of variables declaration//GEN-END:variables

}
